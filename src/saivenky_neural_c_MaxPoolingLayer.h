/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class saivenky_neural_c_MaxPoolingLayer */

#ifndef _Included_saivenky_neural_c_MaxPoolingLayer
#define _Included_saivenky_neural_c_MaxPoolingLayer
#ifdef __cplusplus
extern "C" {
#endif
#undef saivenky_neural_c_MaxPoolingLayer_SIZEOF_DOUBLE
#define saivenky_neural_c_MaxPoolingLayer_SIZEOF_DOUBLE 8L
/*
 * Class:     saivenky_neural_c_MaxPoolingLayer
 * Method:    create
 * Signature: ([I[IIJ)J
 */
JNIEXPORT jlong JNICALL Java_saivenky_neural_c_MaxPoolingLayer_create
  (JNIEnv *, jobject, jintArray, jintArray, jint, jlong);

/*
 * Class:     saivenky_neural_c_MaxPoolingLayer
 * Method:    destroy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_saivenky_neural_c_MaxPoolingLayer_destroy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     saivenky_neural_c_MaxPoolingLayer
 * Method:    feedforward
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_saivenky_neural_c_MaxPoolingLayer_feedforward
  (JNIEnv *, jobject, jlong);

/*
 * Class:     saivenky_neural_c_MaxPoolingLayer
 * Method:    backpropogate
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_saivenky_neural_c_MaxPoolingLayer_backpropogate
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
