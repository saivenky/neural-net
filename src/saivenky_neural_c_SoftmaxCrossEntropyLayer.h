/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class saivenky_neural_c_SoftmaxCrossEntropyLayer */

#ifndef _Included_saivenky_neural_c_SoftmaxCrossEntropyLayer
#define _Included_saivenky_neural_c_SoftmaxCrossEntropyLayer
#ifdef __cplusplus
extern "C" {
#endif
#undef saivenky_neural_c_SoftmaxCrossEntropyLayer_SIZEOF_DOUBLE
#define saivenky_neural_c_SoftmaxCrossEntropyLayer_SIZEOF_DOUBLE 8L
/*
 * Class:     saivenky_neural_c_SoftmaxCrossEntropyLayer
 * Method:    create
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_saivenky_neural_c_SoftmaxCrossEntropyLayer_create
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     saivenky_neural_c_SoftmaxCrossEntropyLayer
 * Method:    destroy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_saivenky_neural_c_SoftmaxCrossEntropyLayer_destroy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     saivenky_neural_c_SoftmaxCrossEntropyLayer
 * Method:    feedforward
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_saivenky_neural_c_SoftmaxCrossEntropyLayer_feedforward
  (JNIEnv *, jobject, jlong);

/*
 * Class:     saivenky_neural_c_SoftmaxCrossEntropyLayer
 * Method:    setExpected
 * Signature: (J[[D)V
 */
JNIEXPORT void JNICALL Java_saivenky_neural_c_SoftmaxCrossEntropyLayer_setExpected
  (JNIEnv *, jobject, jlong, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
